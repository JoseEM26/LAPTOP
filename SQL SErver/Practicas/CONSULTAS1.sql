--ABRIENDO LA BASE DE DATOS DEL SISTEMA
USE MASTER
GO

--VALIDAR LA BASE DE DATOS
IF DB_ID('VENTAS2017') IS NOT NULL
	DROP DATABASE VENTAS2017
GO

--CREANDO LA BASE DE DATOS
CREATE DATABASE VENTAS2017
GO

--ABRIENDO LA BASE DE DATOS
USE VENTAS2017
GO

--CAMBIANDO EL FORMATO DE LA FECHA
SET DATEFORMAT DMY
GO

--CREANDO TABLAS Y VALIDANDO

--TABLA CATEGORIAS
IF OBJECT_ID ('CATEGORIAS') IS NOT NULL
BEGIN
	DROP TABLE CATEGORIAS
END 
CREATE TABLE CATEGORIAS
( 
	COD_CATE			CHAR		(3) 	NOT NULL PRIMARY KEY,
	NOMBRE			VARCHAR		(25) 	NOT NULL
)
GO

--TABLA DISTRITOS
IF OBJECT_ID('DISTRITOS') IS NOT NULL
BEGIN
	DROP TABLE DISTRITOS
END

CREATE TABLE DISTRITOS 
(
	ID_DISTRITO			CHAR		(4) 	NOT NULL PRIMARY KEY,
	NOMBRE_DISTRITO		VARCHAR 	(40) 	NOT NULL
)
GO

--TABLA CARGOS

IF OBJECT_ID('CARGOS') IS NOT NULL
BEGIN
	DROP TABLE CARGOS
END
CREATE TABLE CARGOS
(
	COD_CARGO	  		CHAR 		(3) 	NOT NULL PRIMARY KEY,
	NOMBRE_CARGO 		VARCHAR 	(30) 	NOT NULL
)
GO

--TABLA EMPLEADO

IF OBJECT_ID('EMPLEADO') IS NOT NULL
BEGIN
	DROP TABLE EMPLEADO
END

CREATE TABLE EMPLEADO
(
	COD_EMPLE		CHAR	 	(5) 	NOT NULL PRIMARY KEY,
	NOMBRES			VARCHAR 	(25) 	NOT NULL,
	APELLIDOS		VARCHAR 	(25) 	NOT NULL,
	DNI_EMPLE		CHAR	 	(8) 	NOT NULL,
	DIRECCION		VARCHAR 	(60) 	NOT NULL,
	ESTADO_CIVIL	CHAR    	(1) 	NOT NULL,
	NIVEL_EDUCA		VARCHAR 	(30) 	NOT NULL,
	TELEFONO		VARCHAR 	(12) 	NOT NULL,
	EMAIL			VARCHAR 	(35) 	NOT NULL,
	SUELDO_BASICO	MONEY	 	NOT 	NULL,
	FECHA_INGRESO	DATE		NOT 	NULL,
	ID_DISTRITO		CHAR    	(4) 	NOT NULL REFERENCES DISTRITOS,
	COD_CARGO		CHAR	 	(3) 	NOT NULL REFERENCES CARGOS
)
GO
 		
--TABLA CLIENTE

IF OBJECT_ID('CLIENTE') IS NOT NULL
BEGIN
	DROP TABLE CLIENTE
END

CREATE TABLE CLIENTE
(
	ID_CLIENTE			CHAR	 	(6) 	NOT NULL PRIMARY KEY,
	NOMBRES				VARCHAR 	(25) 	NOT NULL,
	APELLIDOS			VARCHAR 	(25) 	NOT NULL,
	DIRECCION			VARCHAR 	(60) 	NULL,
	FONO				CHAR    	(9) 	NULL,
	ID_DISTRITO			CHAR	 	(4) 	NOT NULL REFERENCES DISTRITOS,
	EMAIL				VARCHAR 	(35) 	NULL
)
GO

--TABLA PRODUCTO

IF OBJECT_ID('PRODUCTO') IS NOT NULL
BEGIN
	DROP TABLE PRODUCTO
END

CREATE TABLE PRODUCTO
(
	ID_PRODUCTO			CHAR	 	(6)  	NOT NULL PRIMARY KEY,
	DESCRIPCION			VARCHAR 	(45) 	NOT NULL,
	PRECIO_VENTA		MONEY        		NOT NULL,
	STOCK_MINIMO		INT					NULL,
	STOCK_ACTUAL		INT					NULL,
	FECHA_VENC			DATE				NULL,
	COD_CATE			CHAR		(3)		NOT NULL REFERENCES CATEGORIAS
)

	GO

--TABLA BOLETA

IF OBJECT_ID('BOLETA') IS NOT NULL
BEGIN
	DROP TABLE BOLETA
END

CREATE TABLE BOLETA
(
	NUM_BOLETA			CHAR	 	(8) 	NOT NULL PRIMARY KEY,
	FECHA_EMI			DATE	     		NOT NULL,
	ID_CLIENTE			CHAR	 	(6) 	NOT NULL REFERENCES CLIENTE,
	COD_EMPLE			CHAR	 	(5) 	NOT NULL REFERENCES EMPLEADO,
	ESTADO_BOLETA		VARCHAR 	(25) 	NOT NULL
)
GO

	--TABLA DETALLE_BOLETA

IF OBJECT_ID ('DETALLEBOLETA') IS NOT NULL
BEGIN
	DROP TABLE DETALLEBOLETA
END

CREATE TABLE DETALLEBOLETA
(
	NUM_BOLETA			CHAR 		(8) 	NOT NULL REFERENCES BOLETA,
	ID_PRODUCTO		CHAR 		(6) 	NOT NULL REFERENCES PRODUCTO,
	CANTIDAD			INT	  				NOT NULL,
	IMPORTE			MONEY	  			NOT NULL,
	PRIMARY KEY (NUM_BOLETA, ID_PRODUCTO)
)
GO

--@@@@@@@@@@@@@@@@@@@@@IMPLEMENTACIÓN DE RESTRICCIONES@@@@@@@@@@@@@@@@@@@@
					--@@DEFAULT, CHECK, UNIQUE@@


--@@@@@ DEFAULT @@@@@

--ASIGNAR EL VALOR CERO AL STOCK MINIMO Y STOCK ACTUAL DE LA TABLA PRODUCTO 
ALTER TABLE PRODUCTO ADD CONSTRAINT DF_STOCKACT DEFAULT 0 FOR STOCK_ACTUAL 
GO 
 
ALTER TABLE PRODUCTO ADD CONSTRAINT DF_STOCKMIN DEFAULT 0 FOR STOCK_MINIMO 
GO 
 
--ASIGNAR EL VALOR “AC” AL ESTADO DE LA BOLETA DE LA TABLA BOLETA. 
ALTER TABLE BOLETA ADD CONSTRAINT DF_ESTADO DEFAULT 'AC' FOR ESTADO_BOLETA 
GO 
 
--ASIGNAR EL VALOR “NO REGISTRA” AL CORREO ELECTRONICO (EMAIL) DE LA TABLA CLIENTE
ALTER TABLE CLIENTE ADD CONSTRAINT DF_EMAIL DEFAULT 'NO REGISTRA' FOR EMAIL 
GO 
 
--ASIGNAR EL VALOR “0000000” AL TELEFONO DE LA TABLA CLIENTE 
ALTER TABLE CLIENTE ADD CONSTRAINT DF_TELEFONO DEFAULT '000000000' FOR FONO 
GO 
 
--@@@@@ CHECK @@@@@

--EL PRECIO DE VENTA DEL PRODUCTO DEBE SER MAYOR A CERO 
ALTER TABLE PRODUCTO ADD CONSTRAINT CHK_PRECIOVENTA CHECK(PRECIO_VENTA>0) 
GO

--EL ESTADO DE LA BOLETA SOLO DEBE PERMITIR LOS VALORES AC(ACTIVO) Y AN(ANULADO)
ALTER TABLE BOLETA ADD CONSTRAINT CHK_ESTADO CHECK(ESTADO_BOLETA IN('AC','AN')) 
GO 
 
--LA FECHA DE EMISIÓN DE LA BOLETA DEBE MAYOR O IGUAL A LA FECHA ACTUAL.
--ALTER TABLE BOLETA
--ADD CONSTRAINT CHK_FECHA_EMI
--CHECK (FECHA_EMI>=GETDATE())
--GO

--EL CAMPO ESTADO CIVIL DE LA TABLA EMPLEADO SOLO DEBE PERMITIR LOS VALORES C (CASADO), S (SOLTERO), T (CONVIVIENTE), D (DIVORCIADO), V (VIUDO)
ALTER TABLE EMPLEADO ADD CONSTRAINT CK_ESTADOCIVIL CHECK(ESTADO_CIVIL IN('S','C','V','D','T'))
GO

--EL CAMPO NIVEL DE EDUCACIÓN DE LOS EMPLEADOS DEBE PERMITIR LOS VALORES (PRIMARIA, SECUNDARIA, SUPERIOR, UNIVERSITARIO).
ALTER TABLE EMPLEADO ADD CONSTRAINT CK_NIVELEDUCA CHECK(NIVEL_EDUCA IN('PRIMARIA','SECUNDARIA','SUPERIOR','UNIVERSITARIO'))
GO

--EL SUELDO BÁSICO DE LOS EMPLEADOS DEBE SER COMO MÍNIMO 850.00
ALTER TABLE EMPLEADO ADD CONSTRAINT CKSUELDO CHECK(SUELDO_BASICO>=850.00)
GO

--EL CAMPO CÓDIGO DE LA TABLA EMPLEADO DEBE EMPEZAR CON LA LETRA E
ALTER TABLE EMPLEADO ADD CONSTRAINT CHK_CODEMPLE CHECK (COD_EMPLE   LIKE 'E[0-9][0-9][0-9][0-9]')
GO

--EL CAMPO CÓDIGO DE LA TABLA EMPLEADO DEBE EMPEZAR CON LA LETRA E

ALTER TABLE CATEGORIAS ADD CONSTRAINT CHK_CODCATE CHECK (COD_CATE LIKE 'C[0-9][0-9]')
GO

--@@@@@ UNIQUE @@@@@

--LOS NOMBRES DE LOS DISTRITOS DEBEN SER VALORES UNICOS 
ALTER TABLE DISTRITOS ADD CONSTRAINT UQ_NOMBRE_DIST UNIQUE (NOMBRE_DISTRITO) 
GO 
 
--LA DESCRIPCIÓN DEL PRODUCTO DEBEN SER VALORES UNICOS 
ALTER TABLE PRODUCTO ADD CONSTRAINT UQ_DESCRIPCION_PROD UNIQUE (DESCRIPCION) 
GO 
 
--EL DNI DE LA TABLA EMPLEADO DEBEN SER VALORES UNICOS 
ALTER TABLE EMPLEADO ADD CONSTRAINT UQ_DNIEMPLE UNIQUE (DNI_EMPLE) 
GO 

--EL DNI DE LA TABLA EMPLEADO DEBEN SER VALORES UNICOS 
ALTER TABLE EMPLEADO ADD CONSTRAINT UQ_DIRECCION UNIQUE (DIRECCION) 
GO 

--VERIFICAR TODAS LAS RESTRICCIONES DE LA TABLA PRODUCTO 
SP_HELPCONSTRAINT PRODUCTO 
 
--ELIMINAR LA RESTRICCION UQ_DESCRIPCION_PROD DE LA TABLA PRODUCTO 
--ALTER TABLE PRODUCTO 
--DROP UQ_DESCRIPCION_PROD

--LISTANDO LAS TABLAS CREADAS EN UNA BASE DE DATOS
SELECT * FROM INFORMATION_SCHEMA.TABLES
GO

--LISTADO LAS COLUMNAS DE LA TABLA PRODUCTO
SP_COLUMNS PRODUCTO
GO

--@@@@@@@@@@@@@@@@@@@TRATAMIENTO DE DATOS DATOS@@@@@@@@@@@@@@@@@@@@@@@@@
--@@@@@@@@@@@@@@@@@@@SENTENCIAS DML - INSERT, UPDATE, DELETE@@@@@@@@@@@@

--INSERTANDO REGISTROS

--INSERTAR REGISTROS A LA TABLA CATEGORIAS --Inserción individual
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C01', 'ABARROTES')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C02','LACTEOS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C03','FRUTAS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C04','BEBIDAS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C05','CONDIMENTOS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C06','VERDURAS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C07','MENESTRAS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C08','CEREALES')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C09','DETERGENTES')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C10','GOLOSINAS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C11','CONSERVAS')
INSERT INTO CATEGORIAS (COD_CATE, NOMBRE) VALUES('C12','HELADOS')

--SELECT * FROM CATEGORIAS
GO

--INSERTAR REGISTROS A LA TABLA DISTRITOS --Inserción individual
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D001','COMAS')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D002','LINCE')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D003','CERCADO')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D004','MIRAFLORES')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D005','LOS OLIVOS')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D006','S.J.L.')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D007','S.J.M.')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D008','INDEPENDENCIA')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D009','PUENTE PIEDRA')
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES ('D010','ANCÓN')
  
--SELECT * FROM DISTRITOS
GO

--INSERTAR REGISTROS A LA TABLA CARGOS --Inserción individual
INSERT INTO CARGOS VALUES('C01','GERENTE')
INSERT INTO CARGOS VALUES('C02','ADMINISTRADOR(A)')
INSERT INTO CARGOS VALUES('C03','VENDEDOR(A)')
INSERT INTO CARGOS VALUES('C04','CONTADOR(A)')
INSERT INTO CARGOS VALUES('C05','SECRETARIA')

--SELECT * FROM CARGOS
GO

--INSERTAR REGISTROS A LA TABLA CLIENTE --Inserción individual
INSERT INTO CLIENTE VALUES ('CLI001','ANETH LUANA','TINEO URIBE','AV. LOS GIRASOLES # 1800','990990230','D006','LUANITAHERMOSA@GMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI002','JOSE LUIS','TARAZONA ZELA','AV. LAS FLORES # 1800',NULL,'D006','JOSESITO@GMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI003','ANA MARIA','VILLAVICENCIO CASTRO','AV. LAS FLORES # 2560','989434228','D005','ANITAMARIA@GMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI004','JOSE ANTONIO','ENCISO NOLASCO','AV. PROCERES DE LA INDEPENDENCIA # 5000','987845874','D006','JOSANTONIO@GMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI005','ALEJANDRA','CHUCO HUERTA','AV. GRAN CHIMU # 3500','963245874','D005','ALEJANDRITA5245@HOTMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI006','MARIO','CERPA CARRASCO','AV. JOSE CARLOS MARIATEGUI # 3600',NULL,'D003','MARIO56345@GMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI007','ANA TERESA','ANTON PALOMINO','JR. BOLOGNESI # 850','987546321','D007','ANITATERESITA@GMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI008','MANUEL','VASQUEZ LICAS','PJE. LOS HUEROS # 450','987564789','D007','MANUEL9878@YAHOO.COM')
INSERT INTO CLIENTE VALUES ('CLI009','CARLOS','VEGA REYES','AV. BRASIL # 3562','965487545','D008','CARLITOSVEGUITA@HOTMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI010','LUANA','VILLA RAMOS','AV. LA VILLA DEL MAR # 2563','965884578','D010','LUANITAVILLA@GMAIL.COM')
INSERT INTO CLIENTE VALUES ('CLI011','BETSANE','VILLANUEVA QUISPE','AV. LAS TORRES # 2562','','D010',DEFAULT)

--SELECT * FROM CLIENTE
GO

--INSERTAR REGISTROS A LA TABLA EMPLEADO --Inserción individual

INSERT INTO EMPLEADO VALUES ('E0001','BRENDA','QUISPE RAMOS','40138140','JR. PACHITEA # 140','C','SUPERIOR', '990387487','BRENDITA@GMAIL.COM',6000,'02/03/2014','D005','C02')
INSERT INTO EMPLEADO VALUES ('E0002','ANGELICA','ANDRADE CERNA','40138356','JR. MANUEL PRADO # 250','C','SECUNDARIA', '970315487','ANDRADECERNA@GMAIL.COM',1500,'05/06/2014','D005','C03')
INSERT INTO EMPLEADO VALUES ('E0003','ROSAURA','TARAZONA RIVAS','40457140','JR. LOS ROSALES # 350','S','SECUNDARIA', '993315487','TARANOZARIVAS@GMAIL.COM',1500,'05/08/2014','D002','C03')
INSERT INTO EMPLEADO VALUES ('E0004','RUTH','TARDIO HUAMAN','40198740','AV. JOSE BALTA # 1700','S','UNIVERSITARIO', '990115487','HUAMANTAR@GMAIL.COM',2500,'03/05/2015','D003','C04')
INSERT INTO EMPLEADO VALUES ('E0005','GLORIA','ZELADA VELA','78538140','AV. CARLOS MARIATEGUI # 5000','C','SUPERIOR', '900315487','ZELADAVELA@HOTMAIL.COM',1500,'10/10/2015','D005','C03')
INSERT INTO EMPLEADO VALUES ('E0006','SOLEDAD','ZARATE LOPEZ','35638140','AV. ALFONSO UGARTE # 3420','S','SECUNDARIA', '990316687','LOPEZZA@GMAIL.COM',1500,'04/05/2015','D001','C03')
INSERT INTO EMPLEADO VALUES ('E0007','BETSABE','ZAMUDIO SALAS','40134520','JR. URUGUAY # 145','T','SUPERIOR', '99038797','ZAMUDIOZALAS@GMAIL.COM',1500,'03/03/2015','D006','C03')
INSERT INTO EMPLEADO VALUES ('E0008','ANETH','ROSALES TINEO','40138222','AV. BOLIVIA # 1500','T','SUPERIOR', '990377487','ROSALESTINEO@GMAIL.COM',1500,'04/05/2014','D006','C03')
INSERT INTO EMPLEADO VALUES ('E0009','RAUL','BECERRA VILLA','40133647','AV. CARLOS IZAGUIRRE # 3245','S','SECUNDARIA', '990005487','VILLABECE@GMAIL.COM',1500,'12/12/2013','D003','C03')
INSERT INTO EMPLEADO VALUES ('E0010','VICTOR','CANALES HUAMANI','40124140','JR. ANDAHUAYLAS # 354','C','UNIVERSITARIO', '997815487','CANALESHUAMANI@GMAIL.COM',1500,'03/07/2014','D002','C03')
INSERT INTO EMPLEADO VALUES ('E0011','ANGEL','PORRAS LINARES','02338140','AV. WIESSE # 2650','T','UNIVERSITARIO', '990253878','LINARESPOR@GMAIL.COM',1500,'03/11/2013','D004','C03')
INSERT INTO EMPLEADO VALUES ('E0012','CARLA','URIARTE REGINALDO','40008140','AV. LAS FLORES # 4000','D','SUPERIOR', '991254787','REGINALDOURI@GMAIL.COM',1500,'12/05/2014','D004','C03')
INSERT INTO EMPLEADO VALUES ('E0013','CELIA','ESPINAL CHUCO','40130004','AV. MONTENEGRO # 3564','T','SUPERIOR', '988025947','CELIAESPINAL@GMAIL.COM',1000,'03/06/2013','D008','C03')
INSERT INTO EMPLEADO VALUES ('E0014','THALIA','ROMANI VELIZ','40133365','AV. MANCO CAPAC # 2560','S','UNIVERSITARIO', '988315487','THALIAROMA@HOTMAIL.COM',1500,'03/03/2015','D007','C03')
INSERT INTO EMPLEADO VALUES ('E0015','JUANA','PAREDES PAREDES','40888784','PJE. LOS HUERTOS # 250','C','UNIVERSITARIO', '955315487','JUANITAPA@HOTMAIL.COM',1500,'06/06/2014','D002','C03')

--SELECT * FROM EMPLEADO
GO

--INSERTAR REGISTROS A LA TABLA PRODUCTO --Inserción individual
INSERT INTO PRODUCTO VALUES ('PRO001','ARROZ COSTEÑO X 50 - SACO',160.0,5,200,'04/03/2018','C01')
INSERT INTO PRODUCTO VALUES ('PRO002','AZUCAR RUBIA X 50 - SACO',100.0,2,80,'05/05/2018','C01')
INSERT INTO PRODUCTO VALUES ('PRO003','FIDEOS ANITA X 12 - BOLSA',30.0,3,150,'08/10/2018','C01')
INSERT INTO PRODUCTO VALUES ('PRO004','FIDEOS MOLITALIA X 12 - BOLSA',35.0,5,120,'08/08/2018','C01')
INSERT INTO PRODUCTO VALUES ('PRO005','YOGURT GLORIA X 6 - PAQUETE',26.0,5,230,'25/08/2018','C02')
INSERT INTO PRODUCTO VALUES ('PRO006','LECHE GLORIA X 48 - CAJA',98.0,5,240,'31/12/2017','C02')
INSERT INTO PRODUCTO VALUES ('PRO007','ACEITE PRIMOR X 12 - CAJA ',75.0,10,180,'10/10/2019','C01')
INSERT INTO PRODUCTO VALUES ('PRO008','LENTEJAS X 50 - SACO',230.0,5,50,'20/12/2017','C07')
INSERT INTO PRODUCTO VALUES ('PRO009','PALLARES X 50 - SACO',290.0,2,30,'02/12/2017','C07')
INSERT INTO PRODUCTO VALUES ('PRO010','ATUN A1 X 48 - CAJA',145.0,2,80,'12/12/2019','C01')
INSERT INTO PRODUCTO VALUES ('PRO011','GALLETA CHARADA X 100 - BOLSA',72.0,5,160,'30/11/2017','C10')
INSERT INTO PRODUCTO VALUES ('PRO012','GASEOSA COCACOLA X 24 - CAJA',24.0,2,50,'26/10/2017','C04')
INSERT INTO PRODUCTO VALUES ('PRO013','DETERGENTE ARIEL X KILO - BOLSA',15.0,2,40,'07/08/2018','C09')
INSERT INTO PRODUCTO VALUES ('PRO014','COMINO X 100 - CAJA',10.0,5,300,'02/12/2017','C05')
INSERT INTO PRODUCTO VALUES ('PRO015','GASEOSA PEPSI X 12 MEDIANA- PAQUETE',20.0,5,50,'02/03/2018','C04')
INSERT INTO PRODUCTO VALUES ('PRO016','DOS CABALLOS X 6 - CAJA',28.0,5,45,'02/03/2019','C11')
INSERT INTO PRODUCTO VALUES ('PRO017','CEREALES ANGEL X KILO - BOLSA',18.0,5,70,'02/10/2017','C05')
INSERT INTO PRODUCTO VALUES ('PRO018','QUAKER X KILO - BOLSA',7.00,5,300,'02/12/2017','C01')
INSERT INTO PRODUCTO VALUES ('PRO019','PEZIDURI X LITRO - POTE',8.50,5,300,'31/12/2017','C12')
INSERT INTO PRODUCTO VALUES ('PRO020','ARROZ PAISANA SUPERIOR x 5kg- Bolsa',17.0,5,80,'07/12/2017','C01')
INSERT INTO PRODUCTO VALUES ('PRO021','MANTEQUILLA X 12 - PAQUETE',22.0,3,30,'02/02/2018','C01')
INSERT INTO PRODUCTO VALUES ('PRO022','ACEITE FRIOL X 6 - BOLSA',25.0,2,60,'02/03/2018','C01')
INSERT INTO PRODUCTO VALUES ('PRO023','MERMELADA X 12 - PAQUETE',35.0,3,42,'31/12/2017','C01')
INSERT INTO PRODUCTO VALUES ('PRO024','GASEOSA SPRITE PERSONAL X 24 - PAQUETE',45.0,6,150,'31/12/2018','C04')
INSERT INTO PRODUCTO VALUES ('PRO025','VINO BORGOÑA X 6 - CAJA',60.0,5,100,'07/05/2018','C04')

--SELECT * FROM PRODUCTO
GO

--INSERTAR REGISTROS A LA TABLA BOLETA Y SU DETALLE BOLETA -- Inserción individual

INSERT INTO BOLETA VALUES('10000001','01/05/2017','CLI002','E0002','AC')
INSERT INTO BOLETA VALUES('10000002','15/04/2017','CLI002','E0005','AC')
INSERT INTO BOLETA VALUES('10000003','03/02/2016','CLI001','E0002','AC')
INSERT INTO BOLETA VALUES('10000004','02/05/2017','CLI003','E0005','AC')
INSERT INTO BOLETA VALUES('10000005','03/04/2015','CLI001','E0005','AC')
INSERT INTO BOLETA VALUES('10000006','30/04/2015','CLI010','E0007','AC')
INSERT INTO BOLETA VALUES('10000007','04/03/2015','CLI009','E0007','AC')
INSERT INTO BOLETA VALUES('10000008','03/10/2015','CLI004','E0001','AC')
INSERT INTO BOLETA VALUES('10000009','10/10/2016','CLI005','E0002','AC')
INSERT INTO BOLETA VALUES('10000010','11/11/2016','CLI009','E0002','AC')

GO

--AHORA INSERTAREMOS A SU DETALLE BOLETA

INSERT INTO DETALLEBOLETA VALUES('10000001','PRO002',3,300.0)
INSERT INTO DETALLEBOLETA VALUES('10000001','PRO010',2,290.0)

INSERT INTO DETALLEBOLETA VALUES('10000002','PRO002',2,200.0)
INSERT INTO DETALLEBOLETA VALUES('10000002','PRO006',3,294.0)
INSERT INTO DETALLEBOLETA VALUES('10000002','PRO008',1,230.0)

INSERT INTO DETALLEBOLETA VALUES('10000003','PRO008',2,460.0)
INSERT INTO DETALLEBOLETA VALUES('10000003','PRO010',3,435.0)
INSERT INTO DETALLEBOLETA VALUES('10000003','PRO012',6,120.0)
INSERT INTO DETALLEBOLETA VALUES('10000003','PRO014',10,100.0)

INSERT INTO DETALLEBOLETA VALUES('10000004','PRO004',6,210.0)
INSERT INTO DETALLEBOLETA VALUES('10000004','PRO011',11,792.0)
INSERT INTO DETALLEBOLETA VALUES('10000004','PRO013',3,45.0)

INSERT INTO DETALLEBOLETA VALUES('10000005','PRO013',5,75.0)
INSERT INTO DETALLEBOLETA VALUES('10000005','PRO014',8,80.0)
INSERT INTO DETALLEBOLETA VALUES('10000005','PRO011',7,504.0)
INSERT INTO DETALLEBOLETA VALUES('10000005','PRO012',4,96.0)

INSERT INTO DETALLEBOLETA VALUES('10000006','PRO007',2,150.0)
INSERT INTO DETALLEBOLETA VALUES('10000006','PRO009',1,290.0)

INSERT INTO DETALLEBOLETA VALUES('10000007','PRO013',6,90.0)
INSERT INTO DETALLEBOLETA VALUES('10000007','PRO011',2,144.0)
INSERT INTO DETALLEBOLETA VALUES('10000007','PRO001',10,1600.0)
INSERT INTO DETALLEBOLETA VALUES('10000007','PRO003',5,150.0)

INSERT INTO DETALLEBOLETA VALUES('10000008','PRO025',3,180.0)
INSERT INTO DETALLEBOLETA VALUES('10000008','PRO024',2,90.0)

INSERT INTO DETALLEBOLETA VALUES('10000009','PRO023',2,70.0)
INSERT INTO DETALLEBOLETA VALUES('10000009','PRO022',3,75.0)

INSERT INTO DETALLEBOLETA VALUES('10000010','PRO021',2,44.0)
INSERT INTO DETALLEBOLETA VALUES('10000010','PRO017',8,144.0)
GO

SELECT * FROM CATEGORIAS
SELECT * FROM DISTRITOS
SELECT * FROM CARGOS
SELECT * FROM CLIENTE
SELECT * FROM EMPLEADO
SELECT * FROM PRODUCTO
SELECT * FROM BOLETA
SELECT * FROM DETALLEBOLETA

GO

--**********************************REALIZANDO CONSULTAS BÁSICAS*******************************************
/*1. Seleccionar todos los registros de la tabla cliente.*/

SELECT *FROM CLIENTE
  

/*2. Seleccionar los campos id_cliente, nombres, apellidos, 
dirección de la tabla cliente.*/
SELECT ID_CLIENTE, NOMBRES, APELLIDOS
FROM CLIENTE

/*3. Seleccionar los campos id_producto, descripción y precio_venta 
de la tabla producto utilizando Alias P.*/

SELECT P.ID_PRODUCTO,P.DESCRIPCION,P.PRECIO_VENTA
FROM PRODUCTO AS P

/*4. Seleccionar los campos id_cliente, nombres y apellidos concatenados, fono, email de la tabla
cliente. Utilizar Alias y cambiar el nombre de las columnas de respuesta por Código, Cliente,
Teléfono, Correo.*/

SELECT C.ID_CLIENTE AS CODIGO,
       C.NOMBRES+' '+C.APELLIDOS AS CLIENTE,
	   C.FONO AS TELEFONO,
	   C.EMAIL AS CORREO
FROM CLIENTE AS C

/*5. Seleccione todos distintos tipos de distrito (id_distrito) que aparecen en la tabla cliente.
Utilizar distinct.*/

SELECT DISTINCT C.ID_DISTRITO  
FROM CLIENTE AS C

/*6. Seleccionar los campos id_producto, descripción, stock_actual y stock_minimo de la tabla
producto. utilizar alias, además cambiando los nombres de las columnas a Código, Descripción,
Stock actual, Stock mínimo y ordenar los registros de forma ascendente por descripción de
producto.*/

  SELECT P.ID_PRODUCTO,P.DESCRIPCION,P.STOCK_ACTUAL,P.STOCK_MINIMO
  FROM PRODUCTO AS P
  ORDER BY P.DESCRIPCION ASC


/*7. Mostrar todos los registros de la tabla detalle boleta, pero cuya cantidad sea mayor a 5. Utilizar
alias y sentencia where. (Debe salir 9 registros)*/

   SELECT *
   FROM DETALLEBOLETA
   WHERE CANTIDAD>5

/*8. Mostrar todos los campos de la tabla producto, pero de aquellos cuyo código del producto sea
PRO002 y PRO004. Utilizar Alias, sentencia Where y operadores de comparación y lógicos. (Debe salir 2 registros)*/

  SELECT *
  FROM PRODUCTO AS P
  WHERE P.ID_PRODUCTO ='PRO002' OR
        P.ID_PRODUCTO='PRO004'

/*9. Seleccionar todos los campos de la tabla cliente, pero de aquellos cuyo código de distrito sea
D006. Utilizar Alias y operador de comparación. (Debe salir 3 registros)*/
  SELECT*FROM CLIENTE
  WHERE ID_CLIENTE ='D006'

   SELECT *
   FROM CLIENTE 
   WHERE ID_CLIENTE='D006'

/*10. Seleccionar id_producto, descripción y precio_venta de la tabla producto, pero de aquellos cuyo
precio_venta esté entre 30 y 100. Utilizar alias, operadores de comparación y lógicos. (Debe salir 9 registros)*/

  SELECT ID_PRODUCTO , DESCRIPCION, PRECIO_VENTA
  FROM  PRODUCTO
  WHERE PRECIO_VENTA BETWEEN 30 AND 100


/*11. Seleccionar todos los campos de la tabla cliente a excepción de los clientes de distrito D003 y
D010. Utilizar alias, operadores de comparación y operador lógico NOT (Debe salir 8 registros)*/

SELECT *
FROM CLIENTE AS C
WHERE NOT( C.ID_DISTRITO='D003' OR C.ID_DISTRITO='D010')

SELECT*
FROM CLIENTE AS C
WHERE C.ID_DISTRITO <>'D003' AND
      C.ID_DISTRITO <>'D010'


/*12. Seleccionar todos los campos de la tabla Empleado cuyo nombre comienza con R y apellidos con
T. Utilizar alias, operadores lógicos y sentencia LIKE (Debe salir 2 registros)*/

SELECT*
FROM EMPLEADO AS E
WHERE E.NOMBRES LIKE 'R%' AND
      E.APELLIDOS LIKE 'T%'


/*13. Seleccionar todos los campos de la tabla Empleado cuya segunda letra de apellidos es A y estado
civil soltero (S). Utilizar alias, operadores lógicos y sentencia LIKE (Debe salir 3 registros)*/

  SELECT * 
  FROM EMPLEADO  AS E
  WHERE E.APELLIDOS LIKE '_A%' AND
        E.ESTADO_CIVIL ='S'


/*14. Mostrar todos los campos de la tabla producto, pero de aquellos que su stock actual esté entre
60 y 120. Utilizar alias y sentencia BETWEEN (Debe salir 7 registros)*/

  SELECT *
  FROM PRODUCTO AS P
  WHERE P.STOCK_ACTUAL BETWEEN 60 AND 120

/*15. Mostrar todos los campos de la tabla Empleado, pero de aquellos que sean de los distritos D005,
D007 y D009. Utilizar Alias y sentencia IN (Debe salir 4 registros)*/

  SELECT*
  FROM EMPLEADO AS E
  WHERE E.ID_DISTRITO IN('D009','D007','D005')

/*16. Mostrar los campos id_producto, descripción, precio_venta, stock_actual; pero aquellos
productos cuya descripción comienza con la letra A o M y precio_venta mayor o igual a 15 y
stock_actual mayor o igual a 30. (Debe salir 8 registros)*/

   SELECT P.ID_PRODUCTO,P.DESCRIPCION,P.PRECIO_VENTA,P.STOCK_ACTUAL
   FROM  PRODUCTO AS P
   WHERE P.DESCRIPCION LIKE 'A%' OR 
         P.DESCRIPCION LIKE 'M%' AND
		 P.PRECIO_VENTA >=15 AND
		 P.STOCK_ACTUAL >=30
        


/*17. Mostrar todas las ventas emitidas desde 01/01/2016 hasta 31/12/2016. (Debe salir 3 registros)*/
    
	SELECT * 
	FROM BOLETA AS B
	WHERE YEAR(B.FECHA_EMI)=2016

/*18. Mostrar todos los campos de la tabla producto, pero de aquellos que su categoría sea C10 o C05. (Debe salir 3 registros)*/

 SELECT *
 FROM PRODUCTO  AS P
 WHERE P.COD_CATE IN ('C10','C05')

/*19. Mostrar cod_emple, nombres, apellidos, estado_civil, nivel_educa, email y sueldo_básico; pero
solo aquellos empleados que sean casados y de nivel_educa superior o secundaria y
sueldo_básico mayor a 1000 y cuyo email termina en GMAIL.COM (Debe salir 2 registros)*/

   SELECT * 
   FROM EMPLEADO AS E
   WHERE E.ESTADO_CIVIL ='C' AND
         (E.NIVEL_EDUCA ='SUPERIOR' OR E.NIVEL_EDUCA ='SECUNDARIA') AND
		 E.SUELDO_BASICO >1000 AND
		 E.EMAIL LIKE '%GMAIL.COM'


/*20. Mostrar cod_emple, nombres, apellidos, estado_civil, nivel_educa, email y sueldo_básico; pero
solo aquellos empleados que sean solteros y sueldo_básico mayor a 900 y en apellidos contenga
la letra E en la penúltima posición. (Debe salir 1 registro)*/

  SELECT*
  FROM EMPLEADO AS E
  WHERE E.ESTADO_CIVIL ='S' AND
        E.SUELDO_BASICO>900 AND 
		E.APELLIDOS LIKE '%E_'


/*21. Mostrar todas las boletas que pertenece a la cliente ANETH LUANA (Utilice su código) (Debe salir 2 registros)*/

SELECT *
FROM CLIENTE C
WHERE C.NOMBRES='ANETH LUANA'

SELECT*FROM CLIENTE